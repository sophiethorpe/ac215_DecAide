name: CI - Build and Lint

on:
  push:
    branches:
      - main
      - milestone2
      - milestone3
      - milestone4
  pull_request:
    branches:
      - main
      - milestone2
      - milestone3
      - milestone4

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Node.js for ESLint (for JavaScript projects)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 3: Cache node_modules for faster installs
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 4: Install dependencies for JavaScript
    - name: Install dependencies for JavaScript
      run: npm install
      working-directory: src/frontend/image-year-predictor  # Set correct directory for npm install

    # Step 5: Run ESLint for JavaScript linting
    - name: Run ESLint
      run: npm run lint
      working-directory: src/frontend/image-year-predictor  # Set correct directory for ESLint
      continue-on-error: true  # Optional: prevents failing immediately and lets you check all errors

    # Step 6: Set up Python for Flake8 (for Python projects)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Step 7: Cache Python dependencies
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Step 8: Install dependencies for Python
    - name: Install dependencies for Python
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install flake8

    # Step 9: Run Flake8 for Python linting
    - name: Run Flake8
      run: |
        source venv/bin/activate
        flake8 .
      continue-on-error: true

    # Step 10: Run Unit, Integration, and System Tests for Python
    - name: Run Python Tests
      run: pytest tests/  # Run Python tests from the root directory
      continue-on-error: true  # Optional: prevents failing immediately and lets you check all errors

    # Step 11: Run Unit, Integration, and System Tests for JavaScript
    - name: Run JavaScript Tests
      run: npm test  # Run npm tests
      working-directory: src/frontend/image-year-predictor  # Set correct directory for npm test
      continue-on-error: true  # Optional: prevents failing immediately and lets you check all errors
